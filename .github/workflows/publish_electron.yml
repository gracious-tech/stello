
name: publish_electron

on:
    workflow_run:
        workflows: [release]
        types: [completed]
    workflow_dispatch:
        inputs: {}

defaults:
    run:
        shell: bash  # Windows doesn't default to bash

jobs:

    publish:
        name: Package the app with Electron and publish
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        runs-on: ${{ matrix.os }}
        steps:

            -   name: Checkout same commit from same repository as this Github Action is from
                uses: actions/checkout@v2

            -   name: Install and cache latest compatible version of node
                uses: actions/setup-node@v2
                with:
                    node-version: '14'
                    cache: 'npm'
                    cache-dependency-path: '**/package-lock.json'

            -   name: Install node modules for Electron
                working-directory: ./electron
                run: npm ci

            -   name: Extract number of version being published (in case current commit not the tag)
                working-directory: ./electron
                run: |
                    V=`python -c "import json; print(json.load(open('package.json'))['version'])"`
                    echo "VERSION=v$V" >> $GITHUB_ENV

            -   name: Build electron source code
                run: .bin/build_electron
                env:
                    ROLLBAR_ELECTRON: ${{ secrets.ROLLBAR_ELECTRON }}

            -   name: Download app base from release assets
                working-directory: ./electron/dist
                run: |
                    curl https://releases.stello.news/base/$VERSION/stello_base.tar.gz | tar --extract --gzip
                    mv dist app

            -   name: Build and publish
                run: .bin/build_electron_package --publish always
                env:
                    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    # Only mac needs the following
                    CSC_LINK: ${{ secrets.APPLE_CERT_P12_BASE64 }}
                    CSC_KEY_PASSWORD: abc123  # Public since contents already secret
                    APPLE_ID: ${{ secrets.APPLE_ID_EMAIL }}
                    APPLE_ID_PASS: ${{ secrets.APPLE_ID_APP_PASSWORD }}
