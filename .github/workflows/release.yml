
name: release

on:
    workflow_dispatch:
        inputs: {}

jobs:

    new_release:
        name: Create a new release with the generic app base
        runs-on: ubuntu-latest
        steps:

            -   name: Checkout same commit from same repository as this Github Action is from
                uses: actions/checkout@v2

            -   name: Install and cache latest compatible version of node
                uses: actions/setup-node@v2
                with:
                    node-version: '14'
                    cache: 'npm'
                    cache-dependency-path: '**/package-lock.json'

            -   name: Extract number of version being published (same way electron-builder does)
                working-directory: ./electron
                run: |
                    V=`python -c "import json; print(json.load(open('package.json'))['version'])"`
                    echo "VERSION=v$V" >> $GITHUB_ENV

            -   name: Install node modules for app
                working-directory: ./app
                run: npm ci

            -   name: Install node modules for displayer
                working-directory: ./displayer
                run: npm ci

            -   name: Build the generic base of the app
                run: |
                    .bin/reactions
                    .bin/build_displayer
                    # .bin/build_responder_aws (done locally and committed due to complexity)
                    .bin/build_app
                env:
                    VITE_OAUTH_SECRET_GOOGLE: ${{ secrets.OAUTH_SECRET_GOOGLE }}
                    VITE_ROLLBAR_APP: ${{ secrets.ROLLBAR_APP }}
                    VITE_ROLLBAR_RESPONDER: ${{ secrets.ROLLBAR_RESPONDER }}
                    VITE_ROLLBAR_DISPLAYER: ${{ secrets.ROLLBAR_DISPLAYER }}
                    REACTIONS_PASSWORD: ${{ secrets.REACTIONS_PASSWORD }}

            -   name: Upload app base for package jobs to use
                working-directory: ./app
                run: |
                    sudo apt-get install --no-install-recommends awscli
                    tar --create --gzip --file stello_base.tar.gz dist
                    aws configure set region us-west-2
                    aws s3 cp ./stello_base.tar.gz s3://releases-stello-news/base/$VERSION/stello_base.tar.gz
                env:
                    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
