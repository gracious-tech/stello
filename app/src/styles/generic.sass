
@import 'src/styles/utils.sass'


// Make displayer class globally available
@import 'src/shared/styles/displayer'


// Changes to browser defaults


html
    font-family: Roboto, sans-serif
    // Prevent width increases that break layout due to long words like URLs
    // NOTE word-wrap is an old alias of overflow-wrap
    overflow-wrap: break-word  // Break when needed (expand container to its limit first though)


iframe, img
    // Prevent these elements from having implicit bottom padding due to being 'inline'
    display: block


iframe
    border-style: none


video:focus
    outline-style: none


*[contenteditable]:focus
    outline-style: none


input, textarea
    color: inherit
    outline-style: none

    &::placeholder
        // Inherit rather than having a solid grey color
        color: inherit
        opacity: 0.5


strong, th
    // Bold is too strong, especially for other languages
    font-weight: 500


blockquote
    // Blockquote invisible without basic styling
    margin-left: 1em
    border-left: 2px solid rgba(50%, 50%, 50%, 0.5)
    padding-left: 1em


hr
    border-width: 0 0 1px 0
    margin: 16px 0


::-moz-focus-inner
    // Remove dotted outline around focused buttons etc (Firefox only)
    border-style: none


::selection
    // Make text selections match color scheme of app
    // WARN May be hard to read if selecting already accented text
    background-color: rgba(var(--accent_num), 0.5)


body
    // Make scrollbars more subtle and themed
    // WARN Colors chosen to work well on both dark/light bgs (not necessarily exact middle)
    ::-webkit-scrollbar
        width: $stello_scrollbar_width
        background-color: #5552
    ::-webkit-scrollbar-thumb
        background-color: #5554

    hr
        border-color: #5554


// Basic layout


html, body, #app, .v-application--wrap, .docked
    // All elements down to app layout element (.docked) must have height set to prevent
    //      growing off screen and resulting in scrollable area not thinking it needs to scroll
    height: 100%

body
    // Allow showing reload bar above app
    display: flex
    flex-direction: column

#app
    display: flex
    justify-content: center
    align-items: center


// Error styling (rendered outside of Vue)


.reload-bar
    position: relative  // So z-index has an effect
    z-index: 9999
    display: flex
    align-items: center
    justify-content: space-between
    padding: 10px 24px
    font-weight: bold
    line-height: 1
    font-size: 16px

    div
        font-size: 14px

    a
        color: var(--accent_lighter)
        text-decoration: none
        margin: 8px

    button
        border-style: none
        border-radius: 6px
        padding: 6px 8px
        margin-left: 8px
        cursor: pointer
        box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, 0.2)
        background-color: white
        color: rgba(black, 0.8)
        outline-style: none

    &.update
        background-color: var(--accent)
        color: var(--on_accent)

    &.fail
        background-color: var(--error)
        color: var(--on_error)

        a
            color: var(--accent_lighter)


.version-error
    // NOTE No z-index so appears under reload-bar if any
    position: absolute
    left: 0
    right: 0
    top: 0
    bottom: 0

    display: flex
    flex-direction: column
    align-items: center
    justify-content: center

    color: white

    > *
        margin: 12px 0


// Vuetify fixes


html
    // Undo Vuetify forcing scroll on whole page
    overflow-y: hidden


.v-application--wrap
    // Undo Vuetify's `min-height: 100vh` which causes issues with browser chrome on mobile
    min-height: auto


.v-btn--icon.v-size--default
    // Make default icon button size 48px (same as size when within a toolbar)
    width: 48px
    height: 48px


.v-btn.v-btn--fab  // Double for specificity
    // Fix color of text and icons for fabs
    &.primary
        color: var(--on_primary)
    &.accent
        color: var(--on_accent)
    &.error
        color: var(--on_error)
    svg
        fill: currentColor


.v-text-field__prefix, .v-text-field__suffix
    // Make field prefixes/suffixs default to secondary color (not primary)
    @include themed_color('secondary')
    font-size: 14px


.v-toolbar
    // Toolbar text shouldn't be selectable
    user-select: none
    // Stop toolbar growing vertically
    flex-grow: 0
    // Give toolbars a max content width
    .v-toolbar__content, .v-toolbar__extension
        max-width: $header-width
        margin-left: auto
        margin-right: auto
    // Also apply to tabs
    .v-toolbar__extension
        justify-content: center
        .v-tabs
            max-width: $header-width


.v-dialog

    max-width: $content-width

    .v-card__title
        user-select: none
        word-break: break-word  // Vuetify breaks at any char for some reason

    .v-card__actions
        justify-content: flex-end
        flex-wrap: wrap


.v-tabs-items
    // Assuming tabs are used as subnav for whole page, should not have own background
    background-color: transparent !important


.v-application--wrap .v-list, .v-dialog__content .v-list, .v-virtual-scroll
    // Default to transparent bg for lists (as usually the main item on page)
    // NOTE .v-application--wrap avoids disabling bg for menus (which are outside of app wrap)
    // WARN dialogs are also outside app wrap, so must be specified separately
    background-color: transparent

    .v-list-item__action
        // Stop adding extra margin to buttons which makes item height too large
        margin-bottom: 0
        margin-top: 0


.v-slider
    // Sliders can be interacted with so show pointer
    cursor: pointer


.v-application

    // Links have accent color so don't need underline
    a:not(.v-btn)
        text-decoration: none

    // If on solid color, just show underline/strong and don't change color
    .primary, .accent, .error
        a:not(.v-btn)
            color: inherit !important  // Override needed
            text-decoration: underline
            font-weight: 500

    // Lighten links on dark bg (and vice versa)
    // NOTE Only do this for text (e.g. links) as it is hard to read when not light/dark enough
    //      i.e. don't need for things like switches and underlines (just leave normal accent)
    // NOTE Don't apply to disabled items ([aria-disabled] more reliably present than [disabled])
    &.theme--dark
        a:not(.v-btn)  // Links amongst text
            color: var(--accent_lighter)
        .primary--text:not([aria-disabled])  // Vuetify text buttons etc
            color: var(--primary_lighter) !important  // Required to override Vuetify :/
        .accent--text:not([aria-disabled])
            color: var(--accent_lighter) !important
        .error--text:not([aria-disabled])
            color: var(--error_lighter) !important
    &.theme--light
        a:not(.v-btn)
            color: var(--accent_darker)
        .primary--text:not([aria-disabled])
            color: var(--primary_darker) !important
        .accent--text:not([aria-disabled])
            color: var(--accent_darker) !important
        .error--text:not([aria-disabled])
            color: var(--error_darker) !important

    // Stop Vuetify's color classes from overriding disabled themes (e.g. on v-list-item)
    // NOTE list items within select components don't have [disabled]
    &.theme--dark
        *[aria-disabled]
            color: rgba(white, map-get($material-dark, 'disabledORhints-text-percent')) !important
    &.theme--light
        *[aria-disabled]
            color: rgba(black, map-get($material-light, 'disabledORhints-text-percent')) !important

    // Make tooltips inverse theme
    // NOTE Whole tooltip already has an opacity of 0.9
    &.theme--light .v-tooltip__content
        color: white
        background-color: black
    &.theme--dark .v-tooltip__content
        color: black
        background-color: white


// Fixes for other modules


.croppr
    display: block !important  // inline-block can result in bottom gap due to line-height etc

    // Make excluded area lighter (rather than darker) when cropping a dark image
    &.croppr-dark .croppr-overlay
        background-color: rgba(white, 0.5)


// Custom

.clickable
    cursor: pointer

.invisible
    visibility: hidden

.noselect
    user-select: none

.ellipsis
    // Getting text overflow to show ellipsis can be tricky and minimally requires these
    text-overflow: ellipsis
    overflow-x: hidden
    white-space: nowrap
    display: inline-block  // Or block (can't use flex :/)

.app-bg-accent, .app-bg-accent-darker, .app-bg-error, .app-bg-error-darker
    a
        text-decoration: underline !important
        color: inherit !important

.app-bg-primary
    color: var(--on_primary) !important
    background-color: var(--primary) !important

.app-bg-accent
    color: var(--on_accent) !important
    background-color: var(--accent) !important

.app-bg-accent-darker
    color: var(--on_accent_darker) !important
    background-color: var(--accent_darker) !important

.app-bg-error
    color: var(--on_error) !important
    background-color: var(--error) !important

.app-bg-error-darker
    color: var(--on_error_darker) !important
    background-color: var(--error_darker) !important

.theme--dark
    .app-bg-primary-relative
        background-color: var(--primary_darker) !important
        color: var(--on_primary_darker) !important
    .app-bg-accent-relative
        background-color: var(--accent_darker) !important
        color: var(--on_accent_darker) !important
    .app-bg-error-relative
        background-color: var(--error_darker) !important
        color: var(--on_error_darker) !important
    .app-fg-primary-relative
        color: var(--primary_lighter) !important
    .app-fg-accent-relative
        color: var(--accent_lighter) !important
    .app-fg-error-relative
        color: var(--error_lighter) !important
    .opacity-primary
        opacity: map-get($material-dark, 'primary-text-percent')
    .opacity-secondary
        opacity: map-get($material-dark, 'secondary-text-percent')
    .opacity-disabled
        opacity: map-get($material-dark, 'disabledORhints-text-percent')
.theme--light
    .app-bg-primary-relative
        background-color: var(--primary_lighter) !important
        color: var(--on_primary_lighter) !important
    .app-bg-accent-relative
        background-color: var(--accent_lighter) !important
        color: var(--on_accent_lighter) !important
    .app-bg-error-relative
        background-color: var(--error_lighter) !important
        color: var(--on_error_lighter) !important
    .app-fg-primary-relative
        color: var(--primary_darker) !important
    .app-fg-accent-relative
        color: var(--accent_darker) !important
    .app-fg-error-relative
        color: var(--error_darker) !important
    .opacity-primary
        opacity: map-get($material-light, 'primary-text-percent')
    .opacity-secondary
        opacity: map-get($material-light, 'secondary-text-percent')
    .opacity-disabled
        opacity: map-get($material-light, 'disabledORhints-text-percent')


// Light accent (but not error) always looks better on any shade of primary
.v-application.theme--light
    .app-bg-primary, .app-bg-primary-relative
        a:not(.v-btn)
            color: var(--accent_lighter)
        .accent--text:not([aria-disabled])
            color: var(--accent_lighter) !important


// Tooltip
// NOTE ::after used since Vuetify buttons make use of ::before
[data-tip]::after
    @include tooltip
    content: attr(data-tip)
[data-tip]:hover::after, [data-tip]:focus::after
    top: -$tooltip_height - 6
    opacity: 1 !important
[data-tip]:not([data-tip-instant]):hover::after, [data-tip]:not([data-tip-instant]):focus::after
    transition-delay: 500ms
[data-tip-below]::after
    top: auto !important
    bottom: -10px
[data-tip-below]:hover::after, [data-tip-below]:focus::after
    bottom: -$tooltip_height - 6


// Transitions
.trans-up-enter-active, .trans-up-leave-active, .trans-right-enter-active, .trans-right-leave-active
    transition: all 0.3s
    pointer-events: none
    user-select: none

.trans-up-enter-to, .trans-up-leave
    // Should be around the height of the element
    // When leaving, too large will cause delayed start, too small will jump at start
    max-height: 300px  // Aimed at things with the height of a card

.trans-up-enter, .trans-up-leave-to
    max-height: 0  // So items below start moving up as it leaves
    opacity: 0
    transform: scaleY(0)  // So shrinks rather than just displaced upwards

.trans-right-enter-to, .trans-right-leave
    max-height: 100px  // Aimed at list items

.trans-right-enter, .trans-right-leave-to
    max-height: 0  // So items below start moving up as it leaves
    opacity: 0
    transform: translateX(100px)



// Fixes for displayer (prevent app/Vuetify from overriding displayer styles)


.stello-displayer

    .srow
        padding-top: 0 !important  // Add bar provides same padding

    a
        color: var(--stello-hue) !important

    strong
        font-weight: revert  // 500 weight not supported by fonts used for message display

    button
        font-family: ui-sans-serif, system-ui, sans-serif
        // Make buttons inherit message theme color rather than app theme color
        color: inherit !important
        &.v-btn--disabled
            color: inherit !important
            opacity: 0.3
